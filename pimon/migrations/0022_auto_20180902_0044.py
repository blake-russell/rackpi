# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-09-02 05:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('pimon', '0021_auto_20180830_2318'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abv', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('wtm', models.IntegerField()),
                ('cmc', models.IntegerField()),
                ('polo', models.CharField(default='0', max_length=100)),
                ('grav', models.CharField(default='0', max_length=100)),
                ('cbri', models.CharField(default='0', max_length=100)),
                ('algo', models.CharField(choices=[(b'SHA-256', b'SHA-256'), (b'Ethash', b'Ethash'), (b'Scrypt', b'Scrypt'), (b'X11', b'X11'), (b'Equihash', b'Equihash'), (b'Zhash', b'Zhash'), (b'CryptoNightLiteV1', b'CryptoNightLiteV1'), (b'CryptoNightV7', b'CryptoNightV7'), (b'Blake (14r)', b'Blake (14r)'), (b'Blake (2b)', b'Blake (2b)'), (b'LBRY', b'LBRY'), (b'Pascal', b'Pascal'), (b'Lyra2REv2', b'Lyra2REv2'), (b'Myr-Groestl', b'Myr-Groestl'), (b'Qubit', b'Qubit'), (b'Quark', b'Quark'), (b'Skein', b'Skein'), (b'Nist5', b'Nist5'), (b'TimeTravel10', b'TimeTravel10'), (b'PHI1612', b'PHI1612'), (b'PHI2', b'PHI2'), (b'NeoScrypt', b'NeoScrypt'), (b'X11Gost', b'X11Gost'), (b'Any', b'Any'), (b'None', b'None')], default='None', max_length=15)),
                ('decimal', models.IntegerField(default='2')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ConfigForecast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading', models.CharField(choices=[(b'OpenWeatherMap', b'OpenWeatherMap'), (b'None', b'None')], default='None', max_length=30)),
                ('api', models.CharField(max_length=100)),
                ('zipcode', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ConfigGlobal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitename', models.CharField(max_length=100)),
                ('timezone', models.IntegerField(choices=[(-5, b'UTC-5'), (-6, b'UTC-6'), (-7, b'UTC-7'), (-8, b'UTC-8')])),
                ('electriccost', models.FloatField(default='0.0')),
                ('emailtype', models.CharField(choices=[(b'Gmail', b'Gmail'), (b'Other', b'Other')], max_length=20)),
                ('email', models.EmailField(blank=True, max_length=200)),
                ('emailpass', models.CharField(blank=True, max_length=200)),
                ('emailsendto', models.EmailField(blank=True, max_length=254)),
                ('module', multiselectfield.db.fields.MultiSelectField(choices=[(b'PDU/Power', b'PDU/Power'), (b'Forecast', b'Forecast'), (b'Ambient Temps', b'Ambient Temps'), (b'Whattomine Module', b'Whattomine Module'), (b'Profit Monitor', b'Profit Monitor'), (b'Wallet Module', b'Wallet Module'), (b'Pool Monitor', b'Pool Monitor'), (b'ASIC Monitor', b'ASIC Monitor'), (b'GPU Monitor', b'GPU Monitor'), (b'Price Ticker', b'Price Ticker'), (b'iFrame Module', b'iFrame Module')], max_length=144)),
                ('gpurefresh', models.IntegerField(default=30)),
                ('asicrefresh', models.IntegerField(default=30)),
                ('pdurefresh', models.IntegerField(default=60)),
                ('temprefresh', models.IntegerField(default=60)),
                ('forecastrefresh', models.IntegerField(default=3600)),
                ('walletrefresh', models.IntegerField(default=3600)),
                ('poolrefresh', models.IntegerField(default=1800)),
                ('profitrefresh', models.IntegerField(default=3600)),
                ('wtmrefresh', models.IntegerField(default=3600)),
                ('iframefresh', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('baseurl', models.CharField(max_length=200)),
                ('tailurl', models.CharField(max_length=200)),
                ('confirmed', models.CharField(max_length=200)),
                ('last24hr', models.CharField(max_length=200)),
                ('poolhash', models.CharField(max_length=200)),
                ('nethash', models.CharField(max_length=200)),
                ('price', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading', models.CharField(choices=[(b'Fahrenheit', b'Fahrenheit'), (b'Celsius', b'Celsius')], default='Fahrenheit', max_length=10)),
                ('model', models.CharField(choices=[(b'DHT11', b'DHT11'), (b'DHT22', b'DHT22'), (b'AM2302', b'AM2302'), (b'AM2302', b'AM2302'), (b'DS18B20', b'DS18B20')], default='DHT22', max_length=10)),
                ('gpio', models.IntegerField(choices=[(-1, b'NONE'), (0, b'0'), (1, b'1'), (2, b'2'), (3, b'3'), (4, b'4'), (5, b'5'), (6, b'6'), (7, b'7'), (8, b'8'), (9, b'9'), (10, b'10'), (11, b'11'), (12, b'12'), (13, b'13'), (14, b'14'), (15, b'15'), (16, b'16'), (17, b'17'), (18, b'18'), (19, b'19'), (20, b'20'), (21, b'21'), (22, b'22'), (23, b'23'), (24, b'24'), (25, b'25'), (26, b'26'), (27, b'27')], default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigTicker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickercoin', to='pimon.Coin')),
            ],
            options={
                'ordering': ['coin'],
            },
        ),
        migrations.CreateModel(
            name='ConfigWtm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algo', models.CharField(choices=[(b'SHA-256', b'SHA-256'), (b'Ethash', b'Ethash'), (b'Scrypt', b'Scrypt'), (b'X11', b'X11'), (b'Equihash', b'Equihash'), (b'Zhash', b'Zhash'), (b'CryptoNightLiteV1', b'CryptoNightLiteV1'), (b'CryptoNightV7', b'CryptoNightV7'), (b'Blake (14r)', b'Blake (14r)'), (b'Blake (2b)', b'Blake (2b)'), (b'LBRY', b'LBRY'), (b'Pascal', b'Pascal'), (b'Lyra2REv2', b'Lyra2REv2'), (b'Myr-Groestl', b'Myr-Groestl'), (b'Qubit', b'Qubit'), (b'Quark', b'Quark'), (b'Skein', b'Skein'), (b'Nist5', b'Nist5'), (b'TimeTravel10', b'TimeTravel10'), (b'PHI1612', b'PHI1612'), (b'PHI2', b'PHI2'), (b'NeoScrypt', b'NeoScrypt'), (b'X11Gost', b'X11Gost'), (b'Any', b'Any'), (b'None', b'None')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Mypdu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('pdutype', models.CharField(choices=[(b'HP_S124', b'HP S124')], default='HP_S124', max_length=30)),
                ('address', models.GenericIPAddressField(default='0.0.0.0')),
                ('calltype', models.CharField(choices=[(b'HP_S124', b'HP S124')], default='SNMPv2c', max_length=30)),
                ('smtpcommunity', models.CharField(max_length=200)),
                ('smtppassword', models.CharField(max_length=200)),
                ('smtpport', models.IntegerField()),
                ('bank1watt', models.CharField(max_length=200)),
                ('bank1amp', models.CharField(max_length=200)),
                ('bank1volt', models.CharField(max_length=200)),
                ('bank2watt', models.CharField(max_length=200)),
                ('bank2amp', models.CharField(max_length=200)),
                ('bank2volt', models.CharField(max_length=200)),
                ('bank3watt', models.CharField(max_length=200)),
                ('bank3amp', models.CharField(max_length=200)),
                ('bank3volt', models.CharField(max_length=200)),
                ('bank4watt', models.CharField(max_length=200)),
                ('bank4amp', models.CharField(max_length=200)),
                ('bank4volt', models.CharField(max_length=200)),
                ('bank5watt', models.CharField(max_length=200)),
                ('bank5amp', models.CharField(max_length=200)),
                ('bank5volt', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Mypool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('api', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('suprid', models.CharField(blank=True, max_length=100)),
                ('coin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poolcoin', to='pimon.Coin')),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mypoolpool', to='pimon.ConfigPool')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='myrig',
            name='email',
            field=models.CharField(choices=[(b'yes', b'yes'), (b'no', b'no')], default=b'yes', max_length=3),
        ),
        migrations.AlterField(
            model_name='miner',
            name='algo',
            field=models.CharField(choices=[(b'SHA-256', b'SHA-256'), (b'Ethash', b'Ethash'), (b'Scrypt', b'Scrypt'), (b'X11', b'X11'), (b'Equihash', b'Equihash'), (b'Zhash', b'Zhash'), (b'CryptoNightLiteV1', b'CryptoNightLiteV1'), (b'CryptoNightV7', b'CryptoNightV7'), (b'Blake (14r)', b'Blake (14r)'), (b'Blake (2b)', b'Blake (2b)'), (b'LBRY', b'LBRY'), (b'Pascal', b'Pascal'), (b'Lyra2REv2', b'Lyra2REv2'), (b'Myr-Groestl', b'Myr-Groestl'), (b'Qubit', b'Qubit'), (b'Quark', b'Quark'), (b'Skein', b'Skein'), (b'Nist5', b'Nist5'), (b'TimeTravel10', b'TimeTravel10'), (b'PHI1612', b'PHI1612'), (b'PHI2', b'PHI2'), (b'NeoScrypt', b'NeoScrypt'), (b'X11Gost', b'X11Gost'), (b'Any', b'Any'), (b'None', b'None')], max_length=30),
        ),
        migrations.AlterField(
            model_name='miner',
            name='name',
            field=models.CharField(max_length=30, unique=True),
        ),
        migrations.AlterField(
            model_name='myrig',
            name='algo',
            field=models.CharField(choices=[(b'SHA-256', b'SHA-256'), (b'Ethash', b'Ethash'), (b'Scrypt', b'Scrypt'), (b'X11', b'X11'), (b'Equihash', b'Equihash'), (b'Zhash', b'Zhash'), (b'CryptoNightLiteV1', b'CryptoNightLiteV1'), (b'CryptoNightV7', b'CryptoNightV7'), (b'Blake (14r)', b'Blake (14r)'), (b'Blake (2b)', b'Blake (2b)'), (b'LBRY', b'LBRY'), (b'Pascal', b'Pascal'), (b'Lyra2REv2', b'Lyra2REv2'), (b'Myr-Groestl', b'Myr-Groestl'), (b'Qubit', b'Qubit'), (b'Quark', b'Quark'), (b'Skein', b'Skein'), (b'Nist5', b'Nist5'), (b'TimeTravel10', b'TimeTravel10'), (b'PHI1612', b'PHI1612'), (b'PHI2', b'PHI2'), (b'NeoScrypt', b'NeoScrypt'), (b'X11Gost', b'X11Gost'), (b'Any', b'Any'), (b'None', b'None')], default='Any', max_length=15),
        ),
        migrations.AlterField(
            model_name='myrig',
            name='miner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myrigminer', to='pimon.Miner'),
        ),
        migrations.AlterField(
            model_name='myrig',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
    ]
